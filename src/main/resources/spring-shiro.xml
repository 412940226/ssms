<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 使用spring组件扫描@service  -->
	<context:component-scan base-package="com.peng.service"/>
	<!-- 自定义域realm -->
	<bean id="custom_Realm" class="com.peng.realm.CustomRealm">
	<!-- 解决办法：使两边的数据加密一致 -->
	<!-- CustomCredentialsMatcher 可以自定义 -->
		<!-- <property name="credentialsMatcher" ref="credentialsMatcher"/> -->
	</bean>
	<!-- 安全管理器  ref注入对象-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="sessionMode" value="native" /> 去掉了-->
		<property name="realm" ref="custom_Realm"/>
		<!-- <property name="realms" >
			<list>
               <ref bean="custom_Realm"/>
               <ref bean="app_Realm"/>
            </list>
		</property> -->
		<property name="cacheManager" ref="cacheManager"/>
		<property name="sessionManager" ref="sessionManager"/>
		<property name="rememberMeManager" ref="rememberMeManager"/> 
	</bean>
	<!-- shiro filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器必须的 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 身份认证失败   认证提交的地址 -->
		<property name="loginUrl" value="/login"/>
		<!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
		<!-- <property name="successUrl" value="/index"/> -->
		<!-- 权限认证失败    没有权限认证提交的地址 -->
		<property name="unauthorizedUrl" value="/unauthorized"/>
		<!-- 自定义filter配置 -->
		<property name="filters">
			<map>
				<!-- 将自定义 的FormAuthenticationFilter注入shiroFilter中 -->
				<!-- <entry key="authc" value-ref="myCustomFilter"/> -->
				<entry key="forceLogout" value-ref="forceLogoutFilter"/>
			</map>
		</property>
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问 anon  不需要认证 -->
				/login = anon
				/captcha = anon
				/commons/** = anon
				/main = anon
				/static/** = anon
				<!-- 请求 logout.shtml地址，shiro去清除session  -->
				/logout= anon
				<!-- /** = authc 所有url都必须认证通过才可以访问 authc 需要认证-->
				/sys/** = anon,forceLogout   
				
<!--		# some example chain definitions:
            /admin/** = authc, roles[admin]
            /docs/** = authc, perms[document:read]
            /** = authc
            # more URL-to-FilterChain definitions here -->
			</value>
		</property>
	</bean>
	<!-- Shiro生命周期处理器 保证实现了Shiro内部lifecycle函数的bean执行-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
	
	<!-- 缓存管理器 用户授权信息Cache,采用EhCache-->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
	</bean>
	<!--  凭证匹配器（SimpleCredentialsMatcher，HashedCredentialsMatcher） -->
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"/>
		<property name="hashIterations" value="1"/>
	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	<!-- anotherSessionListener监听 -->
		<!-- session的失效时长，单位毫秒  session 有效时间为半小时 （毫秒单位） -->
		<property name="globalSessionTimeout" value="7200000"/>
		<!-- 相隔多久检查一次session的有效性 -->
		<property name="sessionValidationInterval" value="7200000" /> 
		<!-- 删除失效的session -->
		<property name="deleteInvalidSessions" value="true"/>
		<!-- 是否开启会话验证器，默认是开启的 -->
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<!-- 是否启用/禁用Session Id Cookie，默认是启用的；
           	 如果禁用后将不会设置Session Id Cookie，即默认使用了Servlet容器的JSESSIONID，
                           且通过URL重写（URL中的“;JSESSIONID=id”部分）保存Session Id。 -->
		<property name="sessionIdCookieEnabled" value="true"/>
		<!-- <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>  淘汰-->
		<!-- Session Storage -->
		<property name="sessionDAO" ref="sessionDAO"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>
	<!-- 会话验证调度器   淘汰-->
	<!-- <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionManager" ref="sessionManager"/>
		<property name="sessionValidationInterval" value="7200000" />
	</bean> -->
	<!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('rtemgns419ccg6ddpupfm')}"/>
	</bean>
	<!-- 记住我cookie  -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- rememberMe是cookie的名字 -->
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<!-- 默认记住7天（单位：秒）#{7 * 24 * 60 * 60} -->
		<property name="maxAge" value="604800" />
	</bean>
	<!--  会话Cookie模板，sessionManager创建会话Cookie的模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- <constructor-arg value="fsid" /> -->
		<constructor-arg name="name" value="shiro.sesssion"/>
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
		<!-- <property name="name" value="fjsid" /> -->
		<property name="path" value="/"/>
	</bean>
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
	<!-- Use EHCache as your default  EHCache SessionDAO -->
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<!-- <property name="sessionIdGenerator" ref="userSessionIdGenerator"/> -->
	</bean>
	<!-- 自定义认证过滤器  注入-->
	<bean id="myCustomFilter" class="com.peng.filter.CustomFormAuthenticationFilter">
		<property name="rememberMeParam" value="rememberMe"/>
	</bean>
	
	<!-- 强制用户退出过滤器 -->
	<bean id="forceLogoutFilter" class="com.peng.filter.ForceLogoutFilter">
		<property name="loginUrl"  value="/login"/>
	</bean>
</beans>